<script>
    $(document).ready(async () => {
        const urlParams = new URLSearchParams(window.location.search);
        const collectionId = urlParams.get('collection');
        if (collectionId) {
            await axios(axiosConfig(`${config.SERVER_URL}${config.URLS.SEARCH_USER}?search=`, 'GET'))
            .then((resp) => {
                resp?.data?.data.map((e) => $('#multiselect').append(`<option value= ${e._id}>${e?.text}</option>`))
                $('#multiselect').select2({
                    search: true
                });
            })
            .catch((err) => ToastMsg(err?.response?.data?.message, 'Error'))
            await axios(axiosConfig(`${config.SERVER_URL}${config.URLS.COLLECTION_DETAILS}/${collectionId}`, 'GET'))
                .then((response) => {
                    const { data: { data } } = response
                    localStorage.setItem('infatuationId', data?.infatuationId)
                    $.ajax({
                        url: `${config.SERVER_URL}${config.URLS.INFATUATION_DETAILS}/${data.infatuationId}`,
                        method: 'GET',
                        headers: {
                            Authorization: `Bearer ${token}`
                        },
                        success: async (resp) => {
                            resp?.data?.results?.map((e)=>{
                                $(`option[value=${e._id}]`).remove();
                                var newOption = new Option(e.name, e._id, false, true);
                                $('#multiselect').append(newOption)
                            })
                            $('#Infatuation_1').summernote('code', resp?.data?.html.editor1)
                            $('#Infatuation_2').summernote('code', resp?.data?.html.editor2)
                            
                        },
                        error: (err) => window.location.href = 'admin/nft'
                    })
                    $('#skeleton').text(`You are Infatuating`)
                    $('#CollectionName_Creator').text(` ${data?.title} - ${data?.createdBy?.name}`)
                    $('.skeleton').removeClass('skeleton')
                })
                .catch((err) => {
                    window.location.href = 'admin/nft'
                })
        }

        /** Summernote common configuration */
        const infatuation1Callbacks = {
            onImageUpload: (files, editor, welEditable) => {
                uploadImage(files[0], editor, welEditable, 'Infatuation_1')
            },
            onMediaDelete: function (target) {
                DeleteFile(target[0].src);
            },
            onKeyup: function (e) {
                const key = e.keyCode || e.charCode;
                if (key == 8 || key == 46) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            }
        }
        const infatuation2Callbacks = {
            onImageUpload: (files, editor, welEditable) => {
                uploadImage(files[0], editor, welEditable, 'Infatuation_2')
            },
            onMediaDelete: function (target) {
                DeleteFile(target[0].src);
            },
            onKeyup: function (e) {
                const key = e.keyCode || e.charCode;
                if (key == 8 || key == 46) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            }
        }
        const summernoteConfig = {
            disableDragAndDrop: true,
            height: '250px',
            width: '700px',
            callbacks: infatuation1Callbacks,
            fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'PolySans Median', 'PolySans Slim'],
            fontNamesIgnoreCheck: [ 'PolySans Median', 'PolySans Slim']
            
        }
        const _summernoteConfig = {
            disableDragAndDrop: true,
            height: '250px',
            width: '700px',
            callbacks: infatuation2Callbacks,
            fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'PolySans Median', 'PolySans Slim'],
            fontNamesIgnoreCheck: [ 'PolySans Median', 'PolySans Slim']
        }

        /** Initialize Summernote Editor*/
        $('#Infatuation_1').summernote(summernoteConfig)
        $('#Infatuation_2').summernote(_summernoteConfig)

        /** Method to upload image on S3*/
        const uploadImage = async (file, editor, welEditable, summernoteId) => {
            let data = new FormData();
            data.append("image", file);
            await axios({
                url: `${config.SERVER_URL}${config.URLS.UPLOAD_IMAGE}`,
                method: 'POST',
                data: data,
                processData: false,
                headers: {
                    Authorization: `Bearer ${token}`
                }
            }).then((response) => {
                const url = response?.data?.data?.data?.Location
                summernoteId == 'Infatuation_1' ? $('#Infatuation_1').summernote('insertImage', url, 'myimage') :
                    $('#Infatuation_2').summernote('insertImage', url, 'myimage');
            }).catch((e) => ToastMsg(e?.response?.data?.message, 'Error'))
        }

    })

    /** Method to store the HTML Editor Data into Database*/
    const Upload = async () => {
        $('#Update_Confirm_Modal').modal('show')
    };
    $('#Update_Confirm_Modal').on('show.bs.modal', function () {
        $('#UpdateInfatuation').off().on('click', async function () {
            loading('UpdateInfatuation')
            const htmlEditor1 = $('#Infatuation_1').summernote('code')
            const htmlEditor2 = $('#Infatuation_2').summernote('code')
            const requestParams = {
                html: {
                    editor1: htmlEditor1,
                    editor2: htmlEditor2
                },
                infatuationId: localStorage.getItem('infatuationId'),
                isHomePage: true,
            }
            if($('#multiselect').val().length > 0) requestParams.profileLinks = $('#multiselect').val()
            await axios(axiosConfig(`${config.SERVER_URL}${config.URLS.UPDATE_INFATUATION}`, 'PATCH', requestParams))
                .then((response) => {
                    ToastMsg(response?.data?.message, 'Success')
                })
                .catch((err) => ToastMsg(err?.response?.data?.message, 'Error'))
                $('#Update_Confirm_Modal').modal('hide')
                removeText({ id: 'UpdateInfatuation', confirm: true })

        })

    })

    /** Method to Delete image from S3*/
    const DeleteFile = (url) => {
        console.log(url)
    }


</script>