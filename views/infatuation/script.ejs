<script>
    $(document).ready(async () => {
        const urlParams = new URLSearchParams(window.location.search);
        const collectionId = urlParams.get('collection');
        if (collectionId) {
            await axios(axiosConfig(`${config.SERVER_URL}${config.URLS.COLLECTION_DETAILS}/${collectionId}`, 'GET'))
                .then((response) => {
                    const { data: { data } } = response
                    localStorage.setItem('infatuationId', data.infatuationId)
                    $('#skeleton').text(`You are Infatuating`)
                    $('#CollectionName_Creator').text(` ${data?.title} - ${data?.createdBy?.name}`)
                    $('.skeleton').removeClass('skeleton')
                })
                .catch((err) => {
                    // window.location.href = 'admin/nft'
                    console.log(err?.response?.data)
                })
        }
        
        /** Summernote common configuration */
        const infatuation1Callbacks = {
            onImageUpload: (files, editor, welEditable) => {
                uploadImage(files[0], editor, welEditable, 'Infatuation_1')
            },
            onMediaDelete: function (target) {
                DeleteFile(target[0].src);
            },
            onKeyup: function (e) {
                const key = e.keyCode || e.charCode;
                if (key == 8 || key == 46) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            }
        }
        const infatuation2Callbacks = {
            onImageUpload: (files, editor, welEditable) => {
                uploadImage(files[0], editor, welEditable, 'Infatuation_2')
            },
            onMediaDelete: function (target) {
                DeleteFile(target[0].src);
            },
            onKeyup: function (e) {
                const key = e.keyCode || e.charCode;
                if (key == 8 || key == 46) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            }
        }
        const summernoteConfig = {
            disableDragAndDrop: true,
            height: '250px',
            width: '700px',
            callbacks: infatuation1Callbacks
        }
        const _summernoteConfig = {
            disableDragAndDrop: true,
            height: '250px',
            width: '700px',
            callbacks: infatuation2Callbacks
        }
        $('#Infatuation_1').summernote(summernoteConfig)
        $('#Infatuation_2').summernote(_summernoteConfig)
        const infatuationId = localStorage.getItem('infatuationId')
        if (infatuationId) {
            await axios(axiosConfig(`${config.SERVER_URL}${config.URLS.INFATUATION_DETAILS}/${infatuationId}`, 'GET'))
                .then((resp) => {
                    console.log(resp?.data?.html.editor1)
                    $('#Infatuation_1').summernote('code', resp?.data?.html.editor1)
                    $('#Infatuation_2').summernote('code', resp?.data?.html.editor2)
                }).catch((err) => ToastMsg(err?.resp?.data.message, 'Error'))
        }

        /** Method to upload image on S3*/
        const uploadImage = async (file, editor, welEditable, summernoteId) => {
            let data = new FormData();
            data.append("image", file);
            await axios({
                url: `${config.SERVER_URL}${config.URLS.UPLOAD_IMAGE}`,
                method: 'POST',
                data: data,
                processData: false,
                headers: {
                    Authorization: `Bearer ${token}`
                }
            }).then((response) => {
                const url = response?.data?.data?.data?.Location
                summernoteId == 'Infatuation_1' ? $('#Infatuation_1').summernote('insertImage', url, 'myimage') :
                    $('#Infatuation_2').summernote('insertImage', url, 'myimage');

                // editor.insertImage(welEditable, response?.data?.data?.Location);
            }).catch((e) => ToastMsg(e?.response?.data?.message, 'Error'))
        }

    })

    /** Method to store the HTML Editor Data into Database*/
    const Upload = async () => {
        $('#Update_Confirm_Modal').modal('show')
    };
    $('#Update_Confirm_Modal').on('show.bs.modal', function () {
        $('#UpdateInfatuation').off().on('click', async function () {
            const htmlEditor1 = $('#Infatuation_1').summernote('code')
            const htmlEditor2 = $('#Infatuation_2').summernote('code')
            const requestParams = {
                html: {
                    editor1: htmlEditor1,
                    editor2: htmlEditor2
                },
                infatuationId: localStorage.getItem('infatuationId'),
                isHomePage: true,
                profileLinks: $("input[name='profileLink[]']").map(function () { return $(this).val(); }).get()
            }
            await axios(axiosConfig(`${config.SERVER_URL}${config.URLS.UPDATE_INFATUATION}`, 'PATCH', requestParams))
                .then((response) => {
                    $('#Update_Confirm_Modal').modal('hide')
                    ToastMsg(response?.data?.message, 'Success')
                })
                .catch((err) => ToastMsg(err?.response?.data?.message, 'Error'))

        })

    })

    /** Method to Delete image from S3*/
    const DeleteFile = (url) => {
        console.log(url)
    }

    /** Method to add Profile Link Input */
    const addButton = document.getElementById("AddProfileInput");
    const inputContainer = document.getElementById("ProfileLinkDiv");
    let inputCount = 0;
    function addInput() {
        inputCount++;
        var input = document.createElement("input");
        input.type = "text";
        input.id = "ProfileLinkInput_" + inputCount;
        input.className = "form-control";
        input.placeholder = "Add Profile Link"
        input.style = 'margin-bottom: 3px; margin-top: 3px'
        input.name = "profileLink[]"
        inputContainer.appendChild(input);
    }
    addButton.addEventListener("click", addInput);


</script>